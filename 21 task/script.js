// // счётчик вызовов
// let i = 0;

// const func = () => {
//   i++;

//   func();
// };

// try {
//   func();
// } catch (e) {
//   // Словили ошибку переполнения стэка и вывели значение счетчика в консоль
//   console.log(i);
// }

//Результаты
//Яндекс браузер - 13956
//Firefox - 32925
//Google Chrome - 12554
//Opera - 12551
//Если мы объявим дополнительную переменную внутри функции или даже несколько, то от этого также будет изменяться число счётчика. Чем больше переменных - тем меньше число.

let i = 0;

const func = () => {
  let a = i + 1;
  let b = a + 1;
  let c = b + 1;
  let d = c + 1;
  let e = d + 1;
  i++;

  func();
};

try {
  func();
} catch (e) {
  console.log(i);
}
//Результаты
//Яндекс браузер - 8961
//Firefox - 31364
//Google Chrome - 8369
//Opera - 8361

//расчитать размер стека можно по формуле FunctionSize = N + K * SizeOfVar
//Учитывая, что мы знаем количество вызовов первой функции, в теле которой не объявляются переменные, размер коллстэка можно выразить как:
//X = (N + 0 *  SizeOfVar)* 13956 = N * 13956
//И, для второго случая, возьмем функцию, внутри которой было объявлено пять переменных:
//X = (N + 5 * SizeOfVar) * 8961
//Иксы в обоих случаях обозначают одно и то же число - размер коллстэка. Можем приравнять правые части уравнений.
//N * 13956 = (N + 5 * SizeOfVar) * 8961
//SizeOfVar нам неизвестен. Нам нужно узнать сколько байт в памяти занимает одна такая переменная - 8 байт
//N * 13956 = (N + 5 * 8) * 8961
//N * 13956 = N * 8961 + 40 * 8961
//N * 4995 = 358440
// N = ~72
//В данном случае 72 байта.
//если подставить в эту формулу X = (N + 5 * SizeOfVar) * 8961, то мы получим, что размер коллстэка в Яндекс браузере 1003632 байт

//формулы для расчёта взяты из статьи https://habr.com/ru/articles/550534/
